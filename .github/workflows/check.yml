name: check

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: "workflow = ${{ github.workflow }}, ref = ${{ github.event.ref }}, pr = ${{ github.event.pull_request.id }}"
  cancel-in-progress: ${{ github.event_name == 'pull_request' || github.repository != 'alibaba/code-data-share-for-python' }}

jobs:
  test-cpython:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # https://raw.githubusercontent.com/actions/python-versions/main/versions-manifest.json
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install nox
    - name: Unit tests
      run: nox -s tests_venv_current

  test-conda:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: s-weigand/setup-conda@v1
        with:
          conda-channels: conda-forge
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install nox
      - name: Test with pytest
        run: |
          nox -s tests_multiple_conda
      - name: Test imports
        run: |
          nox -t test_import_third_party

  test-twine:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install nox twine
      - name: Build sdist to test
        run: |
          nox -s build_sdist
      - name: Test with twine
        run: |
          twine check dist/*.tar.gz

  check-format:
    name: Formatting Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      - name: Run clang-format style check
        uses: jidicula/clang-format-action@v4.9.0
        with:
          clang-format-version: '13'
          check-path: 'src/_cds'
          exclude-regex: '(clinic|pythoncapi_compat)'
