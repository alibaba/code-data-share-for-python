name: performance

on:
  release:
    types: [ published ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: "workflow = ${{ github.workflow }}, ref = ${{ github.event.ref }}, pr = ${{ github.event.pull_request.id }}"
  cancel-in-progress: ${{ github.event_name == 'pull_request' || github.repository != 'alibaba/code-data-share-for-python' }}

jobs:
  perf-import:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python: [ '3.8', '3.9', '3.10', '3.11', '3.12' ]
        os: [ ubuntu-latest, macOS-latest, windows-latest ]

    steps:
      - uses: actions/checkout@v4
      - uses: s-weigand/setup-conda@v1
        with:
          conda-channels: conda-forge
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install nox pyperf
      - name: Perf importing third-party packages
        continue-on-error: true
        env:
          RUN: LONG
        run: |
          nox -s test_import_third_party_perf-${{ matrix.python }}
      - uses: actions/upload-artifact@v3
        with:
          name: perf-import
          path: "*.json"

  perf-import-result:
    runs-on: ubuntu-latest
    needs: [ perf-import ]
    steps:
      - uses: actions/setup-python@v4
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pyperf

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: perf-import
          path: ./
      - name: Result
        run: |
          for VERSION in 3.8 3.9 3.10 3.11 3.12
          do
            for OS in linux macos windows
            do
              pyperf compare_to perf-import-$VERSION-$OS-raw.json perf-import-$VERSION-$OS-cds.json | tee perf-import-$VERSION-$OS.table
            done
          done
      - uses: actions/upload-artifact@v3
        with:
          name: perf-import
          path: "*.table"

  pyperformance:
    if: false
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macOS-latest, windows-latest ]

    steps:
      - uses: actions/checkout@v4
      - uses: s-weigand/setup-conda@v1
        with:
          conda-channels: conda-forge
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install nox pyperf
      - name: Pyperformance tests against cds
        run: |
          sh scripts/pyperformance.sh
